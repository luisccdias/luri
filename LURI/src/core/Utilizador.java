/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core;

import db.DBWorker;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Formação
 */
public class Utilizador extends javax.swing.JPanel {

    /**
     * Creates new form Utilizador
     */
    public Utilizador() {
        initComponents();
        tbl_utilizador.removeColumn(tbl_utilizador.getColumnModel().getColumn(0));
        tbl_utilizador.removeColumn(tbl_utilizador.getColumnModel().getColumn(1));
        listar_tabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbl_titulo = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_adicionar = new javax.swing.JButton();
        chk_admin = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_utilizador = new javax.swing.JTable();
        btn_editar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        txt_password = new javax.swing.JPasswordField();
        txt_confirma = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(1075, 696));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Utilizador:");

        lbl_titulo.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbl_titulo.setText("Utilizadores");

        txt_user.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel4.setText("Password:");

        btn_adicionar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btn_adicionar.setText("Adicionar");
        btn_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionarActionPerformed(evt);
            }
        });

        chk_admin.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        chk_admin.setText("Administrador");

        tbl_utilizador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Utilizador", "Password", "Administrador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_utilizador);

        btn_editar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btn_editar.setText("Editar utilizador");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_eliminar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btn_eliminar.setText("Eliminar utilizador");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel5.setText("Confirma password:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addComponent(lbl_titulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_editar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_confirma, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(chk_admin))
                            .addComponent(btn_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lbl_titulo)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_confirma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chk_admin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adicionar)
                        .addGap(132, 132, 132)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editar)
                    .addComponent(btn_eliminar))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 905, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionarActionPerformed
        if (btn_adicionar.getText().equals("Adicionar")) {

            try {
                String user = "luri";
                String password = "123.Abc";
                String baseDados = "luridb";
                String server = "n1nlmysql13plsk.secureserver.net";
                //            String user = "root";
                //            String password = "";
                //            String baseDados = "luridb";
                //            String server = "127.0.0.1";
                DBWorker db;
                db = new DBWorker(server, user, password, baseDados);

                String nome = txt_user.getText();
                char[] pass = txt_password.getPassword();
                char[] cPass = txt_confirma.getPassword();
                String senha = "";
                String cSenha = "";
                boolean admin = chk_admin.isSelected();
                int administrador = 0;

                for (int i = 0; i < pass.length; i++) {
                    senha = senha + pass[i];

                }

                for (int i = 0; i < cPass.length; i++) {
                    cSenha = cSenha + cPass[i];
                }

                if (admin) {
                    administrador = 1;
                }

                if (senha.equals(cSenha)) {
                    String s = "INSERT INTO utilizador(id, utilizador, senha, admin)"
                            + " VALUES (null,'" + nome + "','" + senha + "','" + administrador + "') ;";

                    db.executeUpdate(s);
                    JOptionPane.showMessageDialog(this, "Dados Inseridos com sucesso!");
                    limpar();
                    listar_tabela();
                } else {
                    JOptionPane.showMessageDialog(this, "As passwords não correspondem!");
                }

            } catch (SQLException ex) {
                System.out.println(ex);
            }

        } else {

            try {
                String user = "luri";
                String password = "123.Abc";
                String baseDados = "luridb";
                String server = "n1nlmysql13plsk.secureserver.net";
                //            String user = "root";
                //            String password = "";
                //            String baseDados = "luridb";
                //            String server = "127.0.0.1";
                DBWorker db;
                db = new DBWorker(server, user, password, baseDados);

                String nome = txt_user.getText();
                char[] pass = txt_password.getPassword();
                char[] cPass = txt_confirma.getPassword();
                String senha = "";
                String cSenha = "";
                boolean admin = chk_admin.isSelected();
                int administrador = 0;

                for (int i = 0; i < pass.length; i++) {
                    senha = senha + pass[i];
                }

                for (int i = 0; i < cPass.length; i++) {
                    cSenha = cSenha + cPass[i];
                }

                if (admin) {
                    administrador = 1;
                }

                if (senha.equals(cSenha)) {
                    String s = "UPDATE utilizador "
                            + "SET utilizador = '" + nome + "', senha = '" + senha + "', admin = '" + administrador + "' "
                            + "WHERE id =" + id_edit + ";";

                    db.executeUpdate(s);
                    limpar();
                    listar_tabela();
                    btn_adicionar.setText("Adicionar");
                    JOptionPane.showMessageDialog(this, "Dados Alterados com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "As passwords não correspondem!");
                }

            } catch (SQLException ex) {
                System.out.println(ex);
            }

        }
    }//GEN-LAST:event_btn_adicionarActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        Object[] options = {"Sim", "Não"};
        int dialogResult;
        int linha = tbl_utilizador.getSelectedRow();
        dialogResult = JOptionPane.showOptionDialog(
                null,
                "Quer editar os dados do utilizador: " + tbl_utilizador.getValueAt(linha, 0) + "?",
                "ATENÇÃO!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]
        );
        //se clicou sim faz ..., senão, faz ... :
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                DefaultTableModel model = (DefaultTableModel) tbl_utilizador.getModel();
                id_edit = (int) model.getValueAt(linha, 0);
                txt_user.setText((String) model.getValueAt(linha, 1));
                txt_password.setText((String) model.getValueAt(linha, 2));
                String admin = (String) model.getValueAt(linha, 3);

                if (admin.equals("Sim")) {
                    chk_admin.setSelected(true);
                }

                btn_adicionar.setText("Editar");
            } catch (ArrayIndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "Por favor selecione um utilizador!");
            }

        }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbl_utilizador.getModel();

        int linha = tbl_utilizador.getSelectedRow();
        int pk = (int) model.getValueAt(linha, 0);
        Object[] options = {"Sim", "Não"};
        int dialogResult;

        dialogResult = JOptionPane.showOptionDialog(
                null,
                "Confirma a eliminação do fornecedor " + tbl_utilizador.getValueAt(linha, 0) + "?",
                "ATENÇÃO!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]
        );
        //se clicou sim faz ..., senão, faz ... :
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                String user = "luri";
                String password = "123.Abc";
                String baseDados = "luridb";
                String server = "n1nlmysql13plsk.secureserver.net";
//            String user = "root";
//            String password = "";
//            String baseDados = "luridb";
//            String server = "127.0.0.1";
                DBWorker db;
                db = new DBWorker(server, user, password, baseDados);

                String s = "Delete from utilizador where id =" + pk + ";";

                if (db.executeUpdate(s) > 0) {
                    JOptionPane.showMessageDialog(this, "Utilizador eliminado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Algo de errado não está certo!!");
                    System.out.println(s);
                }
                listar_tabela();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Algo não correu bem");
            }
        }

    }//GEN-LAST:event_btn_eliminarActionPerformed
    private void listar_tabela() {
        try {
            String user = "luri";
            String password = "123.Abc";
            String baseDados = "luridb";
            String server = "n1nlmysql13plsk.secureserver.net";
//            String user = "root";
//            String password = "";
//            String baseDados = "luridb";
//            String server = "127.0.0.1";
            DBWorker db;
            db = new DBWorker(server, user, password, baseDados);

            DefaultTableModel model = (DefaultTableModel) tbl_utilizador.getModel();
            Object[] row = new Object[4];

            String s = "SELECT * FROM utilizador;";

            ResultSet rs = db.executeQuery(s);
            model.setRowCount(0);
            while (rs.next()) {

                row[0] = rs.getInt("id");
                row[1] = rs.getString("utilizador");
                row[2] = rs.getString("senha");
                String pass = rs.getString("admin");
                if (pass.equals("1")) {
                    row[3] = "Sim";
                } else {
                    row[3] = "Não";
                }
                model.addRow(row);
            }

        } catch (SQLException ex) {
            Logger.getLogger(luri_login.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpar() {
        txt_user.setText("");
        txt_password.setText("");
        txt_confirma.setText("");
        chk_admin.setSelected(false);
    }

    private int id_edit;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_adicionar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JCheckBox chk_admin;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTable tbl_utilizador;
    private javax.swing.JPasswordField txt_confirma;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables
}
